#!/bin/bash
#
# A tool to check if OpenVPN users exist in LDAP.
#
# Author: Peter Pakos <peter.pakos@wandisco.com>

set -euo pipefail

readonly APP_VER="16.7.20"
readonly APP_NAME="$(basename "$0")"
readonly DIR="$(cd "$(dirname "$0")" && pwd)"
readonly INDEX_FILE="/etc/openvpn/keys/index.txt"
readonly EXCLUDE_FILE="${DIR}/${APP_NAME}.exclude"
readonly RED="$(tput setaf 1; tput bold)"
readonly GREEN="$(tput setaf 2; tput bold)"
readonly WHITE="$(tput setaf 7; tput bold)"
readonly GREY="$(tput bold)"
readonly RESET=$(tput sgr0)
readonly BASE_DN="cn=users,cn=accounts,dc=ipa,dc=wandisco,dc=com"
ALL=0

get_opts() {
  while getopts ":vha" opt; do
    case $opt in
      v)
        display_version
        exit 0
        ;;
      h)
        display_help
        exit 0
        ;;
      a)
        ALL=1
        ;;
      :)
        printf "Option -${OPTARG} requires an argument\n"
        exit 1
        ;;
      *)
        printf "Invalid option -${OPTARG}\n"
        exit 1
        ;;
    esac
  done
}

display_version() {
  printf "%s %s\n" "$APP_NAME" "$APP_VER"
}

display_help() {
  display_version
  cat <<HELP
Usage: ${APP_NAME} [OPTIONS]
AVAILABLE OPTIONS:
-h  Print this help summary page
-v  Print version number
-a  Show all users (including those who exist in LDAP)
HELP
}

info() {
  printf "[ ${GREY}INFO${RESET} ] $1\n"
}

ok() {
  printf "[  ${GREEN}OK${RESET}  ] $1\n"
}

fail() {
  printf "[ ${RED}FAIL${RESET} ] $1\n"
}

title() {
  printf "         ${WHITE}--== $1 ==--${RESET}\n"
}

get_vpn_users() {
  local index_file="$1"

  if [[ ! -r "$index_file" ]]; then
    fail "Unable to open index file ${index_file}" >&2
    exit 1
  fi

  awk -F '/' '/^V/ {if ($7 ~ "CN=") print $7}' "$index_file" | sed -e 's@CN=@@'

  return 0
}

check_uid() {
  local uid="$1" n=0

  set +o pipefail
  if ! n=$(ldapsearch -LLLx -b $BASE_DN uid=${uid} dn 2>/dev/null | grep '^dn' | wc -l); then
    fail "Unable to connect to LDAP server" >&2
    exit 1
  fi
  set -o pipefail

  if [[ $n -eq 1 ]]; then
    return 0
  else
    return 1
  fi
}

get_excluded_users() {
  local exclude_file="$1"

  if [[ -s "$exclude_file" ]]; then
    cat "$exclude_file" | grep -v '^$'
  fi

  return 0
}

main() {
  local vpn_users= err=0

  get_opts "$@"

  info "Extracting data from ${INDEX_FILE}..."
  vpn_users=$(get_vpn_users "$INDEX_FILE")
  if [[ -s "$EXCLUDE_FILE" ]]; then
    info "Reading excluded users list from ${EXCLUDE_FILE}..."
  fi
  excluded_users=$(get_excluded_users "$EXCLUDE_FILE")
  info "Active VPN users: $(grep -cv '^$' <<<"$vpn_users"), Excluded users: $(grep -cv '^$' <<<"$excluded_users")"
  info "Checking if users exist in LDAP..."
  for user in $vpn_users; do
    if grep $user <<<"$excluded_users" &>/dev/null; then
      continue
    fi
    if check_uid "$user"; then
      if [[ $ALL -eq 1 ]]; then
        ok "$user"
      fi
    else
      fail "$user"
      err=$((err + 1))
    fi
  done
  if [[ $err -eq 0 ]]; then
    ok "All active OpenVPN users exist in LDAP"
  else
    if [[ err -eq 1 ]]; then
      s=""
      es="es"
    else
      s="s"
      es=""
    fi
    info "${err} active OpenVPN user${s} do${es} not exist in LDAP"
  fi

  exit 0
}

main "$@"
